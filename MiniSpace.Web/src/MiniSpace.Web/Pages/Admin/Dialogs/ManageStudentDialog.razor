@page "/admin/students/{StudentDto.Id}/details"
@using Radzen
@using MiniSpace.Web.DTO
@inject DialogService DialogService
@inject IIdentityService IdentityService

<RadzenStack Gap="1rem">
    <RadzenFieldset>
        <HeaderTemplate>
            <RadzenStack Gap="0" Orientation="Orientation.Horizontal">
                <RadzenIcon Icon="account_box" class="me-1"/>
                <b>Identification</b>
            </RadzenStack>
        </HeaderTemplate>
        <ChildContent>
            <RadzenStack Gap="2rem">
                <RadzenRow Size="12" AlignItems="AlignItems.Center">
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Id</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.Id)</b></RadzenText>
                    </RadzenColumn>
    
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Email</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.Email)</b></RadzenText>
                    </RadzenColumn>
                </RadzenRow>
                
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="12">
    
                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
        </ChildContent>
    </RadzenFieldset>
    
    <RadzenFieldset>
        <HeaderTemplate>
            <RadzenStack Gap="0" Orientation="Orientation.Horizontal">
                <RadzenIcon Icon="build" class="me-1"/>
                <b>Manage</b>
            </RadzenStack>
        </HeaderTemplate>
        <ChildContent>
            <RadzenStack Gap="1rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0.5rem">
                    @if (StudentDto.IsBanned)
                    {
                        <RadzenButton Size="ButtonSize.Medium" Text="Unban" Style="width: 200px"
                                      ButtonStyle="ButtonStyle.Primary"
                                      Click="@(() => Unban(StudentDto))"/>
                    }
                    else
                    {
                        <RadzenButton Size="ButtonSize.Medium" Text="Ban" Style="width: 200px"
                                      ButtonStyle="ButtonStyle.Primary"
                                      Click="@(() => Ban(StudentDto))"/>
                        @if (!StudentDto.IsOrganizer)
                        {
                            <RadzenButton Size="ButtonSize.Medium" Text="Grant organizer rights" Style="width: 200px"
                                          ButtonStyle="ButtonStyle.Primary"
                                          Click="@(() => GrantOrganizerRights(StudentDto))"/>
                        }
                        else
                        {
                            <RadzenButton Size="ButtonSize.Medium" Text="Revoke organizer rights" Style="width: 200px"
                                          ButtonStyle="ButtonStyle.Primary"
                                          Click="@(() => RevokeOrganizerRights(StudentDto))"/>
                        }
                    }
                </RadzenStack>
            </RadzenStack>
        </ChildContent>
    </RadzenFieldset>
    
    <RadzenFieldset>
        <HeaderTemplate>
            <RadzenStack Gap="0" Orientation="Orientation.Horizontal">
                <RadzenIcon Icon="face" class="me-1"/>
                <b>Personal info</b>
            </RadzenStack>
        </HeaderTemplate>
        <ChildContent>
            <RadzenStack>
                <RadzenRow Size="12" AlignItems="AlignItems.Center">
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">First name</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.FirstName)</b></RadzenText>
                    </RadzenColumn>

                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Last name</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.LastName)</b></RadzenText>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow Size="12">
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Description</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.Description)</b></RadzenText>
                    </RadzenColumn>

                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Profile image</RadzenText>
                        <RadzenImage Path="@($"data:image/jpeg;base64,{StudentDto.ProfileImage}")"
                                     AlternateText="Not set"
                                     Style="width: 5em" class="rz-border-radius-5"/>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="12">

                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
        </ChildContent>
    </RadzenFieldset>

    <RadzenFieldset>
        <HeaderTemplate>
            <RadzenStack Gap="0" Orientation="Orientation.Horizontal">
                <RadzenIcon Icon="event" class="me-1"/>
                <b>Other info</b>
            </RadzenStack>
        </HeaderTemplate>
        <ChildContent>
            <RadzenStack>
                <RadzenRow Size="12" AlignItems="AlignItems.Center">
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Status</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.State)</b></RadzenText>
                    </RadzenColumn>

                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Email notifications</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.EmailNotifications)</b></RadzenText>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow Size="12">
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Date of birth</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.DateOfBirth.ToLocalTime().ToString(shortDateFormat))</b></RadzenText>
                    </RadzenColumn>

                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-mt-3 rz-my-0">Created at</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6"><b>@(StudentDto.CreatedAt.ToLocalTime().ToString(dateFormat))</b></RadzenText>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="12">

                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
        </ChildContent>
    </RadzenFieldset>

    <RadzenStack Gap="1rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0.5rem">
            <RadzenButton Click="@(() => DialogService.Close(true))" Variant="Variant.Flat" Text="Close" Style="width: 120px"/>
        </RadzenStack>
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter]
    public StudentDto StudentDto { get; set; }

    private const string dateFormat = "dd/MM/yyyy HH:mm";
    private const string shortDateFormat = "dd/MM/yyyy";
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    
    private async void Ban(StudentDto studentDto)
    {
        await IdentityService.BanUserAsync(studentDto.Id);
        StudentDto.IsBanned = true;
        StateHasChanged();
    }
    
    private async void Unban(StudentDto studentDto)
    {
        await IdentityService.UnbanUserAsync(studentDto.Id);
        studentDto.IsBanned = false;
        StateHasChanged();
    }
    
    private async void GrantOrganizerRights(StudentDto studentDto)
    {
        await IdentityService.GrantOrganizerRightsAsync(studentDto.Id);
        studentDto.IsOrganizer = true;
        StateHasChanged();
    }
    
    private async void RevokeOrganizerRights(StudentDto studentDto)
    {
        await IdentityService.RevokeOrganizerRightsAsync(studentDto.Id);
        studentDto.IsOrganizer = false;
        StateHasChanged();
    }
}
