@page "/student-details/{Id:guid}"
@using MiniSpace.Web.Areas.Friends
@inject IFriendsService FriendsService
@using MiniSpace.Web.Areas.MediaFiles
@inject IMediaFilesService MediaFilesService 
@using MiniSpace.Web.DTO
@using Radzen.Blazor
@using MudBlazor

<div class="breadcrumbs-container">
    <MudBreadcrumbs Class="custom-breadcrumbs" Items="_items"></MudBreadcrumbs>
</div>
@code {
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "/", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Friends", href: "/friends", icon: Icons.Material.Filled.VideoLibrary),
    };
}

<h3>Student Profile</h3>
@if (student == null)
{
    <RadzenProgress Label="Loading profile..." Mode="ProgressMode.Indeterminate" />
}
else
{
    <div class="card">
        <div class="card-header">
            <img src="@profileImage" alt="Profile Image" class="profile-image" /> <!-- Update the src attribute -->
            <h3>@student.FirstName @student.LastName</h3>
            <p>@student.Email</p>
        </div>
        <div class="card-body">
            <p><strong>Description:</strong> @student.Description</p>
            <p><strong>Number of Friends:</strong> @student.NumberOfFriends</p>
            <p><strong>Date of Birth:</strong> @student.DateOfBirth.ToLocalTime().ToString("yyyy-MM-dd")</p>
            <p><strong>State:</strong> @student.State</p>
            <p><strong>Joined:</strong> @student.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd")</p>
        </div>
    </div>
}

@code {
    [Parameter] public Guid Id { get; set; }
    private StudentDto student;
    private string profileImage; // Store the Base64 image string

    protected override async Task OnInitializedAsync()
    {
        student = await FriendsService.GetStudentAsync(Id);
        if (student != null)
        {
            var imageResult = await MediaFilesService.GetFileAsync(student.ProfileImage);
            if (imageResult != null)
            {
                profileImage = $"data:image/jpeg;base64,{imageResult.Base64Content}";
            }
        }
    }
}

<style>
    .card {
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-top: 20px;
    }

    .card-header {
        background-color: #f5f5f5;
        padding: 20px;
        text-align: center;
        border-bottom: 1px solid #eee;
    }

    .card-body {
        padding: 20px;
    }

    .profile-image {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 10px;
    }
</style>
