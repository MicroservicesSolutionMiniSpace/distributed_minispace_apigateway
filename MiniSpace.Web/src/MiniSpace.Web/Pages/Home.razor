@page "/home"
@using MiniSpace.Web.DTO
@using MiniSpace.Web.Areas.Posts
@using MiniSpace.Web.Data.Posts
@using MiniSpace.Web.Components
@using MiniSpace.Web.DTO.Wrappers
@using Radzen
@using System.Globalization
@inject NavigationManager NavigationManager
@inject IIdentityService IdentityService
@inject IPostsService PostsService

    
@if (pageInitialized)
{
    <RadzenStack>
        <RadzenDataList PageSize="6" AllowPaging="true" Data="@posts" TItem="PostDto">
            <Template Context="Post">
                <RadzenCard Class="rz-border-radius-3" Style="cursor: pointer; max-width: 1080px;"
                            @onclick="@(() => NavigationManager.NavigateTo($"/events/{Post.EventId}/posts/{Post.Id}"))">
                    <RadzenRow Gap="0.5rem">
                        <RadzenColumn Size="12" class="rz-text-truncate">
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                                @if (Post.UpdatedAt != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Subtitle1" Class="rz-mb-0" Style="color: dodgerblue">
                                        Updated at @(Post.UpdatedAt?.ToLocalTime().ToString("f", CultureInfo.CurrentUICulture))
                                    </RadzenText>   
                                }
                                else
                                {
                                    <RadzenText TextStyle="TextStyle.Subtitle1" Class="rz-mb-0" Style="color: dodgerblue">
                                        Published at @(Post.CreatedAt.ToLocalTime().ToString("f", CultureInfo.CurrentUICulture))
                                    </RadzenText>   
                                }
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                    <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;"/>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                        <RadzenStack Gap="1em">
                            <RadzenStack></RadzenStack>
                            <RadzenText TextStyle="TextStyle.Body1" TextAlign="TextAlign.Left" Class="rz-mb-0">
                                <strong>@(Post.TextContent)</strong>
                            </RadzenText>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>
            </Template>
        </RadzenDataList>
    </RadzenStack>
}


@code {
    private IEnumerable<PostDto> posts;
    private Guid studentId;
    private bool pageInitialized = false;
    private SearchPosts searchModel;
    
    protected override async Task OnInitializedAsync()
    {
        if (IdentityService != null && IdentityService.IsAuthenticated)
        {
            studentId = IdentityService.GetCurrentUserId();
            searchModel = InitializeSearchModel(studentId);
            var result = await PostsService.SearchPostsAsync(searchModel);
            posts = result.Content.Content;
            pageInitialized = true;
        }
        else
        {
            NavigationManager.NavigateTo("");

        }
    }
    
    private static SearchPosts InitializeSearchModel(Guid studentId)
    {
        return new()
        {
            StudentId = studentId,
            Pageable = new PageableDto()
            {
                Page = 1,
                Size = 5,
                Sort = new SortDto()
                {
                    SortBy = new List<string>() {"publishDate"},
                    Direction = "des"
                }
            }
        };
    }
}
