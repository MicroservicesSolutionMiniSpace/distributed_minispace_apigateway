@page "/reports/create/dialog"
@using MiniSpace.Web.Areas.Reports
@using MiniSpace.Web.Models.Reports
@using Radzen
@inject DialogService DialogService
@inject IReportsService ReportsService

<RadzenTemplateForm Data="@CreateReportModel" Submit="@(async (CreateReportModel args) => { await CreateReport(args); })">
    <RadzenStack Gap="1rem">
        <RadzenRow Gap="1rem" JustifyContent="JustifyContent.Center">
            <RadzenColumn Size="12" SizeSM="12">
                <RadzenStack>
                    <RadzenFormField Text="Category" Variant="Variant.Outlined">
                        <RadzenDropDown Data="@categories" @bind-Value="@CreateReportModel.Category"
                                        TextProperty="Key" ValueProperty="Value" Name="category" />
                        <RadzenRequiredValidator Component="category" Style="position: relative"
                                                 Text="Category is required"/>
                    </RadzenFormField>
                    <RadzenFormField Text="Reason" Variant="Variant.Outlined">
                        <RadzenTextArea Style="height: 150px" @bind-Value="@CreateReportModel.Reason" Name="reason"/>
                        <RadzenRequiredValidator Component="reason" Style="position: relative"
                                                 Text="Reason is required"/>
                        <RadzenLengthValidator Component="reason" Max="1000" Style="position: relative"
                                               Text="Reason should have at most 1000 characters"/>
                    </RadzenFormField>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
        <RadzenStack Gap="1rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0.5rem">
                <RadzenButton ButtonType="ButtonType.Submit" Variant="Variant.Flat" Text="Create" Style="width: 100px"/>
                <RadzenButton Click="@(() => DialogService.Close(true))" Variant="Variant.Flat" Text="Cancel" Style="width: 100px"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter]
    public CreateReportModel CreateReportModel { get; set; }
    
    private readonly List<KeyValuePair<string, string>> categories =
    [
        new KeyValuePair<string, string>("Spam", "Spam"),
        new KeyValuePair<string, string>("Harassment and bullying", "HarassmentAndBullying"),
        new KeyValuePair<string, string>("Violence", "Violence"),
        new KeyValuePair<string, string>("Sexual content", "SexualContent"),
        new KeyValuePair<string, string>("Misinformation", "Misinformation"),
        new KeyValuePair<string, string>("Privacy violations", "PrivacyViolations"),
        new KeyValuePair<string, string>("Intellectual property violations", "IntellectualPropertyViolations"),
        new KeyValuePair<string, string>("Other violations", "OtherViolations")
    ];
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    
    private async Task CreateReport(CreateReportModel createReportModel)
    {
        await ReportsService.CreateReportAsync(Guid.Empty, createReportModel.IssuerId,
            createReportModel.TargetId, createReportModel.TargetOwnerId, createReportModel.ContextType,
            createReportModel.Category, CreateReportModel.Reason);
        DialogService.Close(true);
    }
}