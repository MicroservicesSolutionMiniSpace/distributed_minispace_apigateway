@page "/signin"
@using MiniSpace.Web.Models.Identity
@using MiniSpace.Web.Areas.Identity
@using MiniSpace.Web.Areas.Students
@using Radzen
@inject IIdentityService IdentityService
@inject IStudentsService StudentsService
@inject NavigationManager NavigationManager

<h3>Login</h3>

<RadzenAlert AlertStyle="AlertStyle.Danger" @bind-Visible="showError" ShowIcon="false" Variant="Variant.Flat"
             Shade="Shade.Lighter">
    Failed to sign in. Please check your credentials and try again.
</RadzenAlert>

<RadzenTemplateForm Data="@signInModel" Submit="@(async (SignInModel args) => { await HandleSignIn(); })">
    <RadzenFieldset>
        <RadzenStack Gap="1rem">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="5">
                    <RadzenLabel Text="Email:" Component="email" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="5">
                    <RadzenTextBox Style="width: 100%;" Name="email" @bind-Value="signInModel.Email" />
                    <RadzenRequiredValidator Component="email" Text="Email is required" Popup=@popup
                                             Style="position: absolute"/>
                    <RadzenEmailValidator Component="email" Text="Email is invalid" Popup=@popup
                                          Style="position: absolute"/>
                </RadzenColumn>
            </RadzenRow>
            
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="5">
                    <RadzenLabel Text="Password:" Component="password" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="5">
                    <RadzenPassword Style="width: 100%;" Name="password" @bind-Value="signInModel.Password"/>
                    <RadzenRequiredValidator Component="password" Text="Password is required" Popup=@popup
                                             Style="position: absolute"/>
                </RadzenColumn>
            </RadzenRow>
            
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Text="Sign In"/>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    private SignInModel signInModel = new SignInModel();
    private bool showError = false;
    private bool popup;

    private async Task HandleSignIn()
    {
        var jwtDto = await IdentityService.SignInAsync(signInModel.Email, signInModel.Password);
        if (jwtDto != null && !string.IsNullOrEmpty(jwtDto.AccessToken))
        {
            var userDto = await IdentityService.GetAccountAsync();
            var studentDto = await StudentsService.GetStudentAsync(userDto.Id);

            NavigationManager.NavigateTo(studentDto.State == "incomplete" ? "/signup/complete" : "/account");
        }
        else
        {
            showError = true;
            StateHasChanged(); // Force the component to re-render
        }
    }
}
