@page "/signup"
@using MiniSpace.Web.Areas.Identity
@using Radzen
@inject IIdentityService IdentityService
@inject NavigationManager NavigationManager

<h3>Sign Up</h3>

<RadzenTemplateForm Data="@signUpModel" Submit="@(async (SignUpModel args) => { await HandleSignUp(); })">
    <RadzenFieldset>
        <RadzenStack Gap="1rem">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenLabel Text="Firstname:" Component="firstname" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="9">
                    <RadzenTextBox Style="width: 100%;" Name="firstname" @bind-Value="signUpModel.FirstName" />
                    <RadzenRequiredValidator Component="firstname" Text="Firstname is required" Popup=@popup
                                             Style="position: absolute"/>
                </RadzenColumn>
            </RadzenRow>
            
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenLabel Text="Lastname:" Component="lastname" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="9">
                    <RadzenTextBox Style="width: 100%;" Name="lastname" @bind-Value="signUpModel.LastName" />
                    <RadzenRequiredValidator Component="lastname" Text="Lastname is required" Popup=@popup
                                             Style="position: absolute"/>
                </RadzenColumn>
            </RadzenRow>
            
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenLabel Text="Email:" Component="email" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="9">
                    <RadzenTextBox Style="width: 100%;" Name="email" @bind-Value="signUpModel.Email" />
                    <RadzenRequiredValidator Component="email" Text="Email is required" Popup=@popup
                                                                 Style="position: absolute"/>
                    <RadzenEmailValidator Component="email" Text="Email is invalid" Popup=@popup
                                             Style="position: absolute"/>
                </RadzenColumn>
            </RadzenRow>
            
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenLabel Text="Password:" Component="password" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="9">
                    <RadzenPassword Style="width: 100%;" Name="password" @bind-Value="signUpModel.Password" />
                    <RadzenRequiredValidator Component="password" Text="Password is required" Popup=@popup
                                             Style="position: absolute"/>                    
                </RadzenColumn>
            </RadzenRow>
            
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Text="Sign up"/>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    private SignUpModel signUpModel = new SignUpModel();
    private bool popup;
    
    private async Task HandleSignUp()
    {
        var organizerPermission = new List<string> { "organize_events" };
        try
        {
            await IdentityService.SignUpAsync(signUpModel.FirstName, signUpModel.LastName, signUpModel.Email,
                signUpModel.Password, "user", organizerPermission);
            NavigationManager.NavigateTo("/signin");
        }
        catch (Exception ex)
        {
            
        }
    }
}