@page "/signup"
@using MiniSpace.Web.Areas.Identity
@using Radzen
@using MiniSpace.Web.Areas.Http
@inject IIdentityService IdentityService
@inject IErrorMapperService ErrorMapperService
@inject NavigationManager NavigationManager

<h2>Welcome to MiniSpace</h2>
<p>Please sign up to create your account and explore our world to the full.</p>
<div>&nbsp;</div>
<h3>Sign Up</h3>

<div style="display: flex; flex-direction: column; height: 50vh; justify-content: center; align-items: center;">
    <RadzenAlert AlertStyle="AlertStyle.Danger" @bind-Visible="showError" ShowIcon="false" Variant="Variant.Flat"
                 Shade="Shade.Lighter">
        @errorMessage
    </RadzenAlert>
    
    <RadzenTemplateForm Data="@signUpModel" Submit="@(async (SignUpModel args) => { await HandleSignUp(); })">
        <RadzenFieldset>
            <RadzenStack Gap="1rem">
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenLabel Text="Firstname:" Component="firstname"/>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="9">
                        <RadzenTextBox Style="width: 100%;" Name="firstname" @bind-Value="signUpModel.FirstName"/>
                        <RadzenRequiredValidator Component="firstname" Text="Firstname is required" Popup=@popup
                                                 Style="position: absolute"/>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenLabel Text="Lastname:" Component="lastname"/>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="9">
                        <RadzenTextBox Style="width: 100%;" Name="lastname" @bind-Value="signUpModel.LastName"/>
                        <RadzenRequiredValidator Component="lastname" Text="Lastname is required" Popup=@popup
                                                 Style="position: absolute"/>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenLabel Text="Email:" Component="email"/>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="9">
                        <RadzenTextBox Style="width: 100%;" Name="email" @bind-Value="signUpModel.Email"/>
                        <RadzenRequiredValidator Component="email" Text="Email is required" Popup=@popup
                                                 Style="position: absolute"/>
                        <RadzenEmailValidator Component="email" Text="Email is invalid" Popup=@popup
                                              Style="position: absolute"/>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenLabel Text="Password:" Component="password"/>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="9">
                        <RadzenPassword Style="width: 100%;" Name="password" @bind-Value="signUpModel.Password"/>
                        <RadzenRequiredValidator Component="password" Text="Password is required" Popup=@popup
                                                 Style="position: absolute"/>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="12">
                        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Text="Sign up"/>
                    </RadzenColumn>
                </RadzenRow>
                <div>
                    <a href="/forgot-password">Forgot Password?</a> | <a href="/signin">Sign In</a>
                </div>
            </RadzenStack>
        </RadzenFieldset>
    </RadzenTemplateForm>
</div>
@code {
    private SignUpModel signUpModel = new SignUpModel();
    private bool showError = false;
    private string errorMessage = string.Empty;
    private bool popup;
    
    private async Task HandleSignUp()
    {
        var response = await IdentityService.SignUpAsync(signUpModel.FirstName, signUpModel.LastName, signUpModel.Email,
            signUpModel.Password, "user");
        if(response.ErrorMessage == null)
            NavigationManager.NavigateTo("/signin");
        else
        {
            showError = true;
            errorMessage = ErrorMapperService.MapError(response.ErrorMessage);
        }
    }
}