@page "/account/update"
@using MiniSpace.Web.Areas.Students
@using MiniSpace.Web.DTO
@inject IIdentityService IdentityService
@inject IStudentsService StudentsService
@inject NavigationManager NavigationManager

<h1>Update some data in your account:</h1>

@if (showError)
{
    <div class="alert alert-danger">
        Failed to sign in. Please check your credentials and try again.
    </div>
}

<EditForm Model="@studentDto" OnValidSubmit="HandleUpdateStudent">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (studentDto.Id != Guid.Empty)
    {
        <div class="form-group">
            <label for="description">Description:</label>
            <InputText id="description" class="form-control" @bind-Value="studentDto.Description" />
        </div>
    
        <div class="form-group">
            <label for="email-notifications">Email notifications:</label>
            <InputCheckbox id="email-notifications" class="form-control" @bind-Value="studentDto.EmailNotifications" />
        </div>
        
        <button type="submit" class="btn btn-primary">Update account</button>
    }
    else
    {
        <p>Loading...</p>
    }
</EditForm>

@code {
    private StudentDto studentDto = new();
    private bool showError = false;
    
    protected override async Task OnInitializedAsync()
    {
        if (IdentityService.IsAuthenticated)
        {
            var userDto = await IdentityService.GetAccountAsync();
            studentDto = await StudentsService.GetStudentAsync(userDto.Id);
        }
    }
    
    private async Task HandleUpdateStudent()
    {
        await StudentsService.UpdateStudentAsync(studentDto.Id, studentDto.ProfileImage,
            studentDto.Description, studentDto.EmailNotifications);
        NavigationManager.NavigateTo("/account");
    }
}
